<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACouNs3MSo6NC0YERIZERIaERI2HyEYEBEaERIaERI6ODJJR0CzoIivnIRRUEhSUUlyb2O1w+JUVEx0
        Rzp0RzpyRjp0Rzp0dWtWV1GzwuC0bZWlWH6eVXmjVnyWVHeNk7Gpuds7Ni4/OTEZERIaERIaERIaERI4
        ICIaERIaERI/PDZNS0O1ooqvnIRUVEtAPzheXFG0wuBYV018Oy58Oy5qMyh8Oy5aW1OTmbWlWH+uX4il
        WH6kV32jVnygVHp8Q2Cru9xAOjhBOjolJ0IlJ0MmJ0MsYHdBh6YmKUQhHi9CPjlTTUiGd2OKfGmEdmSP
        gGyOf2u0wuBNTEF+PC97Oy5qMyhkMSZXWVGTmbWlWH+4Z5GlWH6kV32jVnyYUXV5Ql6tvdxHQjhGQTe1
        tre2t7i2t7i2t7i3uLmtra63uLlJQEFZTk35+fn5+fn+/v6Ac2J/cmG0wuBYTEx8Oy5iLyVhLyV9Oy5a
        W1OTmbXUe6fKeaO+cJi+b5e9bZa3apJ8Q2Ctvd1IQzpLRTz4+Pj6+vr6+vr6+vr6+vr6+vr6+vplYm9G
        QjXQ0NfQ0NfQ0NeBdFuMgGubrNBhX1WPSDp8Oy5qMyh8Oy5ZWVKJkK3UfKixY4ulWH+kV36jVnygVHp8
        Q2Ctvd1KRTxJQzr4+Pj4+Pjq6uprZmbe3t76+vr9/Pqzvu9WTUtLT5lKTphLT5lESZBESY+cT0GORzmd
        T0F8Oy5qMyh8Oy5XLCNXLCPUfKilWH+lWH+kV36jVnyhVXqHSWitvd1MRT1LRTv4+Pj4+Pjd3d0dDxA3
        ICL6+vqzvu+PlbRRTEZLUJtLUJtLT5lBRopBRoucT0GcT0GcT0F9Oy5qMyh8Oy5gMCZ8gXVcWVWpW4Kl
        WH+ZUnajVnyiVXqPS26UqdJLRDxLRTv6+vr4+Pjd3d0dDxA3ICL6+vqzvu+WnLlYT0xJTZxMUZ1MUZ1L
        T5lKTpimVUV9PC9+PC+7pqOfgXt9Oy5gMSeGfHtmZ17Hd57QeaW4wva4wvagWHpyc2n5+fn39/dOSD/6
        +vr4+Pje3t4eEBE3ISP6+vqzvu+0vNy5urtFS5tMUZ1MUJpESZBESZBESI6MRjlfKyDY2NnPychkMSaF
        hnuChHhlYlYcS2wZR2WxvO64wvaqtuQJK0HX19fZ2dnb29v6+vr4+Pjq6uo2KipMOjv6+vqzu+Kus82s
        rK1GS5xKT5pDSJBDSI9DSI5TMTRVKyJAIBmfr9W0wuCPk4+OkY2IiX5oZVkaSGcaSGft7e2oteDt7e0J
        K0L6+vr6+vr6+vr6+vr5+fnq6uo2KipgUFD6+vpMUZ1tb6CwsLFESZlBRoo7QH07QH07QH07QH07QYY/
        RIShsda0wuCvvd20wd+DhHlnZFdASXwaSGcSOlOoteAIK0EIK0H6+vr6+vr6+vr6+vr6+vrp6ek2Kipg
        UFD6+vpNUp1GS5O7vL1ITJU7QH1MUZ1LUJtLUJpLT5k/RIQ/RIQbITft7e2ir9Lt7e2Gh3xmZl0oaoy4
        P60SOlMHLkYNLT+BgHT6+vr6+vr6+vr6+vr6+vrp6ek2KipMOjv6+vr///5BRopBRopBRopESZAieqpE
        SZBESZBESZA/RIReXVYbHzcbHzccIz6ir9KFhHpkZVyEhXocT3GTNY2AL3wTM0d5enA7NS3p6enq6ur6
        +vr6+vrPz882KytPR0f+/v76+vqpqsFBRopBRooldqgSY5Z3fbtvdbVESZBARYpeXVZeXVYcIz4cIz4k
        KkqDg3iFhnuEhXqCg3iGh3uAdXWCg3h4eW88NS7p6enq6urr6+vs7OzFxcZMQ0RORkalpab6+vrd3d2a
        nLkieKwkcqIWbqKyve+2we97mKyShXuDgXaCgXV9fHBgYFZfYm2EhHqIiX6DhHmFg3qGhHuEhnmCg3iA
        gXdlT008NS6fm5jr6+vt7e3V1tuusblhX2rt7e3h4eGqp6FaV00rjsIldqgYaJeyve+drt4bTnGPhneI
        gHqAf3OBgHSCgXaGhXqJiX2NiYKEhXqDhHmBgXeBe3eDhXRkW31lT01lT01AODDs7Ozt7e20t8KDiZ+H
        jqbt7e3S0tJ1b2JYVEspibkia5gYa5uzvvCdrd4aTnGYkH+Bf3SAfXOBe3SEg3iBgHWHh3yXjIuPiIOE
        hXqBgniEhXl0anx2c2tlT01oUVFpUlJSS0Ht7e2CjaiSocJ6jLB+hqB1bWFzbF9XU0kph7gjcJ8XY5CY
        n8mFkrsZSmsdV3qEdnaHeHh8dm50dGp4d22Ng4KNjYKOhIOOhIJ9dYF5eXR1a3FiXXdTSDxbT0NsVVNs
        YFNPRj53fYuerc+JnMZwaFxxaV12b2JWUkgpiboiaZYYapmps+OosuKmseIRS21tbWSAcnF2bGh0c2mI
        e3qOjoOPhoSOhYOOhIOMhoCEeX56fG94eXFlTExoXlBpVVFpXlBQRj5eZHafrtCjsdGpttSruNV2bmJX
        U0kph7cjcJ8iaJWbpNCcpdGXncIQR2dzaGd5aGh4aWh6b2uDf3SJgH+MioBtYIaJfoGDe4BmXnxyc3Bs
        anNaSkRjUUtnUU9sYVNQRz46OkqltNSotdSsudaruNVjXVJWUUgqh7YmdaMjbZrt7e2XncLt7e0PR2hl
        ZFx2ZWR5aml8dG2EeHaLf36LhH2IfX9/dIOCf3pwY4N6dnZ5boFZRkRdUkVfTEtqX1FQRj43MTqHl7qt
        utesudasudZyal5WUUgph7gjcJ8shbUgYo8fYI0gW4gaUXdiYllyZGN7bGuDgnSJfHuPjoJ0ZoFpYn6N
        g4NnYnt2Z39nWoBnYXdaTkNhVkpgSkhnXU9QRj4zMTYlLU7t7e2ms9Ht7e1xaVxgXFFYVEoriLYiZpMg
        Y48fYY0dWYZnYFFjYVh7eWqAcG91dGqIe3p0ZoeMgH5jWnxkW398fXOLgX11an9xb3RWS0BkVExhVEln
        W09nVE8zMDYbIDcbIDgaHzYpMFVxaVxyal5mYFVpY1hOe49Ga35EaXw/XnBjYVhqYlxxbmFxb2R3dWuF
        fXl+dnWDfXZ2b3x1dHdzcHdmY3lybHVwbG1XS0BdUEVfUUdkWExnVE9bUEVTQ0EjK00eJD4XGzB1bF9p
        YVVzY193cGNyYl90ZmJzbmJva2BpXlpoZlptamBycGV2dGhqYXeCfnZ8enF+enZ5cnRnY3h6cW9jXHZr
        a2tYQ0FgUkleUUVgSUhYTUBaT0RXTUJrY1ZvZFkvNV11bF9vW1tyXV5zYF9zYGB2cWR0cGNxYGBwbmJs
        XV1wbmJ3dGl3dWl8enBmY3BsanBhV3t4bnBlWnVta3NgVHJaTWxbRERcRUROQTdWS0BZTkJVS0FbUEVo
        VVNrY1ZaUkVaUkZoYFRyal52Y2N2cGN5dGd2b2NkXlJ1ZGRmY1V2c2Z4dmxwcGpxcW5ubmtsa211cnN0
        amx1dmhxcWxtbmRTSGROQDhMPjVNPzZTRj5TSD5ZTkFWS0FjUFBYUEdXTkJqYlVoVVRcVEloV1ZvaV5i
        XFFvX112ZWRpZFlpZVp2ZWRpZ2F0aWt5cHNiX3BeVnFzcmZiV21vaGZqa2dUSmVYUGBNQDhOQDhOPzZP
        QDhRRDtTST9UST9YUERYUk5cUkdjVlloWVRdVkpcVEluXVxeV0trWllfWU9gWlFsXl10cGVsZmd6dmxt
        bWptbGlvbGxvbmRwa2VrYmJqa2FfXl5QTWBBODtLPzhRR0RQRDtQRDtTRz5VSkFTTUpXUk1ZUk9kUVBo
        VFJjUlJoV1ZmVVRbVUppW1hhWlBrXl1jXlNuX15sal9tYmFubGJuY2NqaF5mW1tfWlVgWFdcXFRcVVRX
        UlFEPjpCOj5EPEBRQjdOQTdPQzpPRkJSTElRSkhRTEJTSUJgT05TTUFiUFFbU0hcVEpZU0hZU0heWVBg
        XFFeWk9nYVhxY2JyZGRqX19tYWFmXlxYVE5bUlNRUUdPUEdPUEdBNy46LSxJPDQ+MzNANzZMQDhNQTxQ
        SUhGQkZOSEdMSEZVSkNNRTxNRzxdTExSTUJbTkxQTUFTT0VTUEdaVk1lVlZZVk5nW1pkWllUUkpcVFJS
        TUlTTktOTUJYUVFLTEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>